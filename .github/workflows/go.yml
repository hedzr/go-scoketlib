name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

#on: [push, pull_request]

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.11.x, 1.12.x, 1.13.x, 1.14.x]
        #os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Test
        run: go test ./...

  coverage:
    #needs: test
    env:
      COVERALLS_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x
      - name: Checkout code
        uses: actions/checkout@v2
        #with:
        #  path: ./src/github.com/${{ github.repository }}
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Test & Coverage
        run: go test -v -coverprofile=profile.cov ./...
      - name: Send coverage
        uses: shogo82148/actions-goveralls@v1
        with:
          path-to-profile: profile.cov
          parallel: true

  build:
    #env:
    #  GOPATH: ${{ github.workspace }}
    #  GO111MODULE: off
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x
      - name: Checkout code
        uses: actions/checkout@v2
        #with:
        #  path: ./src/github.com/${{ github.repository }}
      - uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build
        run: |
          for dir in cmdr std; do
            for GOOS in windows linux darwin; do
              for GOARCH in amd64; do
                suf=; if [[ $GOOS == "windows" ]]; then suf=".exe"; fi
                go build -v -o bin/tcp-tool-$dir-$GOOS-$GOARCH$suf ./examples/$dir
                gzip bin/tcp-tool-$dir-$GOOS-$GOARCH$suf
              done
            done
          done
      - name: upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: binaries
          path: bin/

  # notifies coveralls that all test jobs are finished
  finish:
    name: Finish
    needs: coverage
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true








